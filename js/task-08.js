// –ó–∞–¥–∞–Ω–∏–µ 8 - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ, –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ input –∏ –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –°–æ–∑–¥–∞—Ç—å, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∫–æ–ª–ª–µ–∫—Ü–∏—è. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –û—á–∏—Å—Ç–∏—Ç—å, –∫–æ–ª–ª–µ–∫—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—á–∏—â–∞–µ—Ç—Å—è.

// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é createBoxes(amount), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä amount - —á–∏—Å–ª–æ. –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç —Å—Ç–æ–ª—å–∫–æ div, —Å–∫–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–æ –≤ amount –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ div#boxes.

// –ö–∞–∂–¥—ã–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π div:

// –ò–º–µ–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π rgb —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
// –†–∞–∑–º–µ—Ä—ã —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ div - 30px –Ω–∞ 30px
// –ö–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π div –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —à–∏—Ä–µ –∏ –≤—ã—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –Ω–∞ 10px
// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é destroyBoxes(), –∫–æ—Ç–æ—Ä–∞—è –æ—á–∏—â–∞–µ—Ç div#boxes.

// <div id="controls">
//   <input type="number" min="0" max="100" step="1" />
//   <button type="button" data-action="render">–°–æ–∑–¥–∞—Ç—å</button>
//   <button type="button" data-action="destroy">–û—á–∏—Å—Ç–∏—Ç—å</button>
// </div>

// <div id="boxes"></div>

let collection = [];
let numberOfBoxes = 0;

const numberOfBoxesRef = document.querySelector('#controls input');
const createBtnRef = document.querySelector(
  '#controls button[data-action="render"]',
);
const destroyBtnRef = document.querySelector(
  '#controls button[data-action="destroy"]',
);
const boxesRef = document.querySelector('div#boxes');

const createBoxes = amount => {
  if (amount) {
    let boxWidth = 30;
    let boxHeight = 30;
    for (let i = 0; i < amount; i += 1) {
      const div = document.createElement('div');
      div.style.backgroundColor = `#${(() =>
        Math.floor(Math.random() * 16777215).toString(16))()}`;
      console.dir(div);
      collection.push(div);
      console.log(collection);

      div.style.width = `${boxWidth + i * 10}px`;
      div.style.height = `${boxHeight + i * 10}px`;
    }
  }

  boxesRef.append(...collection);
  console.log(boxesRef);
};

console.log((() => Math.floor(Math.random() * 16777215).toString(16))());

const handleCreateBtnClick = e => {
  e.preventDefault();
  createBoxes(numberOfBoxes);
};

createBtnRef.addEventListener('click', handleCreateBtnClick);

destroyBtnRef.addEventListener('click', e => {
  e.preventDefault();
  console.log(e.target);
  collection = [];
  console.log('üöÄ ~ collection', collection);
  boxesRef.innerHTML = '';
});

numberOfBoxesRef.addEventListener('input', e => {
  e.preventDefault();

  numberOfBoxes = e.target.value;
  console.log(numberOfBoxes);
});
